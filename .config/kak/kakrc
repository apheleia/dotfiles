# Remove clippy from info window
set global ui_options ncurses_assistant=none

# Add relative line numbers
add-highlighter global/ number-lines -relative

# Use ripgrep for grepping
set global grepcmd 'rg --column'

# Ranger is configured in the autoload directory
map global user r ':  toggle-ranger<ret>' -docstring 'browse files with ranger'

# tig is configured in the autoload directory
map global user g ': enter-user-mode tig<ret>' -docstring 'tig'

# A user mode for development related tasks like lsp and formatting
declare-user-mode development

# Plugin manager and plugins
source "%val{config}/plugins/plug.kak/rc/plug.kak"

plug "abuffseagull/nord.kak" theme %{ colorscheme nord }
plug "https://github.com/schemar/kak-jsts" config %{
    hook global WinSetOption filetype=(javascript|typescript) %{
        alias window tsformat format-eslint
        map window development l -docstring 'lint' ': lint<ret>'
        map window development f -docstring 'format' ': tsformat<ret>'
    }
}

plug "https://github.com/occivink/kakoune-vertical-selection"

plug "https://github.com/andreyorst/powerline.kak" defer powerline %{
    set-option global powerline_format 'git bufname filetype mode_info line_column position'
} config %{
    powerline-start
}

plug "https://github.com/andreyorst/fzf.kak" defer fzf %{
    set-option global fzf_file_command 'fd --type f --hidden --exclude ".git/"'
    set-option global fzf_highlight_command 'bat --style=numbers --color=always {}'
    ## Swtich horizontal/vertical split to match VIM
    set global fzf_horizontal_map 'ctrl-v'
    set global fzf_vertical_map 'ctrl-s'
} config %{
    map global user f ': fzf-mode<ret>' -docstring 'fuzzy find'
}

plug "https://github.com/h-youhei/kakoune-surround" config %{
    # Surround functionality
    declare-user-mode surround
    map global surround s ': surround<ret>' -docstring 'surround'
    map global surround c ': change-surround<ret>' -docstring 'change'
    map global surround d ': delete-surround<ret>' -docstring 'delete'
    map global surround t ': select-surrounding-tag<ret>' -docstring 'select tag'
    map global user s ': enter-user-mode surround<ret>' -docstring 'surround'
}

plug "https://github.com/ul/kak-lsp" config %{
    # uncomment to enable debugging
    # eval %sh{echo ${kak_opt_lsp_cmd} >> /tmp/kak-lsp.log}
    # set global lsp_cmd "kak-lsp -s %val{session} -vvv --log /tmp/kak-lsp.log"

    set global lsp_diagnostic_line_error_sign '║'
    set global lsp_diagnostic_line_warning_sign '┊'

    map global development d ': lsp-definition<ret>' -docstring 'go to definition'
    map global development r ': lsp-references<ret>' -docstring 'show references'
    map global development i ': lsp-implementation<ret>' -docstring 'show implementations'
    map global development R ': lsp-rename-prompt<ret>' -docstring 'rename'
    map global development e ': lsp-find-error --include-warnings<ret>' -docstring 'go to next error/warning'
    map global development p ': lsp-find-error --previous --include-warnings<ret>' -docstring 'go to previous error/warning'
    map global user d ': enter-user-mode development<ret>' -docstring 'development'

    define-command lsp-restart -docstring 'restart lsp server' %{ lsp-stop; lsp-start }
    hook global WinSetOption filetype=(c|cpp|cc|rust|javascript|typescript) %{
        set-option window lsp_auto_highlight_references true
        set-option window lsp_hover_anchor false
        lsp-auto-hover-enable
        echo -debug "Enabling LSP for filtetype %opt{filetype}"
        lsp-enable-window
    }

    hook global WinSetOption filetype=(rust) %{
        set window lsp_server_configuration rust.clippy_preference="on"
    }

    hook global WinSetOption filetype=rust %{
        hook window BufWritePre .* %{
            evaluate-commands %sh{
                test -f rustfmt.toml && printf lsp-formatting-sync
            }
        }
    }

    hook global KakEnd .* lsp-exit
}

# Source a local project kak config if it exists
# Do this last to ensure it overwrites everything else
# Make sure it is set as a kak filetype
hook global BufCreate (.*/)?(\.kakrc\.local) %{
    set-option buffer filetype kak
}
try %{ source .kakrc.local }
